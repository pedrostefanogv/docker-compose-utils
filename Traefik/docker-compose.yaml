version: "3.3"

# Configuração das redes entre os containers
networks:
  traefik_default:
    name: traefik_default
    external: true
  bridge:
    name: bridge
    external: true



services:

  traefik-hub:
    image: ghcr.io/traefik/hub-agent-traefik
    container_name: traefikhub-agent
    restart: "always"
    command:
      - run
      - --hub.token=TOKEN
      - --auth-server.advertise-url=http://hub-agent
      - --traefik.host=traefik
      - --traefik.tls.insecure=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    networks:
      - traefik_default

    depends_on:
      - traefik
  traefik:
    container_name: traefik
    image: "traefik:latest"
    command:
       # Habilitar HUB
      - --experimental.hub=true
      - --hub.tls.insecure=true
      - --metrics.prometheus.addrouterslabels=true


      # informa para o traefik como descobrir os containers
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      - --entrypoints.dns_udp.address=:53/udp
      - --entrypoints.dns_tcp.address=:53/tcp
      - --entrypoints.dnsovertls.address=:853

      # informa para o traefik para não expor o container por padrão
      - --providers.docker.exposedbydefault=false

      - --api
      - --certificatesresolvers.letsencrypt.acme.email=EMAIL
      - --certificatesresolvers.letsencrypt.acme.storage=/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1

      # configurar certificado coringa
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=DOMINIO
      - --entrypoints.websecure.http.tls.domains[0].sans=*.DOMINIO


    # Configurar o traefik pilot
      - --pilot.token=TOKEN


     # - --log.level=DEBUG
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # Se for rodar via coomando substir linha abaixo por ./acme.json:/acme.json
      - "/opt/traefik/acme.json:/acme.json"
    labels:
      # Dashboard
      - "traefik.http.routers.traefik.rule=Host(`DOMINIO`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.entrypoints=websecure"

      # Habilitar o traefik para expor o container
      - "traefik.enable=true"
      # Definir network do container para usar ip para expor
      - "traefik.docker.network=traefik_default"

      # Declaring the user list
      #
      # Note: when used in docker-compose.yml all dollar signs in the hash need to be doubled for escaping.
      # To create user:password pair, it's possible to use this command:
      # echo $(htpasswd -nB user) | sed -e s/\\$/\\$\\$/g
      #
      # Also note that dollar signs should NOT be doubled when they not evaluated (e.g. Ansible docker_container module).
      # Verificar traefikauth / traefik-https-chain
      - "traefik.http.middlewares.traefikauth.basicauth.users="
      - "traefik.http.middlewares.traefik-https-chain.chain.middlewares=traefikauth"
      # linkar autentição do serviço traefik
      - "traefik.http.routers.traefik.middlewares=traefik-https-chain"


     #   Redirecionar todos para HTTPS
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    environment:
      - CF_API_EMAIL=CLOUDFLARE_ACCOUNT_EMAIL_ADDRESS
      - CF_API_KEY=CLOUDFLARE_TOKEN_GOES_HERE
    networks:
      - traefik
      - bridge

  webapp:
    image: containous/whoami
    container_name: "webapp"
    labels:
       #Habilitar o traefik para expor o container
      - "traefik.enable=true"
      - "traefik.http.routers.webapp.rule=Host(`DOMINIO`)"
      - "traefik.http.routers.webapp.entrypoints=websecure"
      - "traefik.http.routers.webapp.tls=true"
      - "traefik.http.routers.webapp.tls.certresolver=letsencrypt"

    networks:
      - traefik_default

